{"ast":null,"code":"var _jsxFileName = \"/Users/sehwanii/Desktop/work/CAU/Capstone/src/pages/AudioRecorderPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'; // useLocation 임포트\nimport '../styles/AudioRecorderPage.css';\nimport { useRecoilState } from 'recoil';\nimport { accessTokenState } from '../hooks/Auth';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioRecorderPage = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [audioBlob, setAudioBlob] = useState(null); // audioBlob 상태 추가\n  const [message, setMessage] = useState(\"\");\n  const location = useLocation(); // useLocation 훅 사용\n  const leveldata = location.state;\n  const [accessToken, setAccessToken] = useRecoilState(accessTokenState);\n  useEffect(() => {\n    const fetchMessageTest = async () => {\n      if (leveldata) {\n        const pageId = leveldata.id;\n        const word = leveldata.word;\n        console.log(leveldata);\n        setMessage(word);\n      }\n    };\n    fetchMessageTest();\n  }, [leveldata]);\n  const startRecording = async () => {\n    console.log(accessToken);\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const recorder = new MediaRecorder(stream);\n      setMediaRecorder(recorder);\n      recorder.start();\n      const audioChunks = [];\n      recorder.ondataavailable = e => audioChunks.push(e.data);\n      recorder.onstop = () => {\n        const audioBlob = new Blob(audioChunks, {\n          type: 'audio/wav'\n        });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudioUrl(audioUrl);\n        setAudioBlob(audioBlob); // audioBlob 상태 설정\n      };\n      setRecording(true);\n    } catch (error) {\n      console.error('Error accessing the microphone:', error);\n    }\n  };\n  const stopRecording = () => {\n    mediaRecorder.onstop();\n    setRecording(false);\n    console.log(audioUrl);\n    console.log(audioBlob);\n  };\n  const sendAudioToServer = async audioBlob => {\n    const formData = new FormData();\n    formData.append('question', leveldata.id); // 추가 데이터 전송\n    formData.append('file', audioBlob, 'audio.wav');\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/upload/`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        },\n        body: formData\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.message || 'Failed to upload audio');\n      console.log('Audio uploaded successfully:', data);\n    } catch (error) {\n      console.error('Error uploading audio:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-flex\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [message && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Audio Recorder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), recording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : audioUrl ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        children: \"Re Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), audioUrl && !recording && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          src: audioUrl,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => sendAudioToServer(audioBlob),\n          children: \"Submit Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecorderPage, \"LA7uwsP3CozQBy5gVuQBX0tJbsY=\", false, function () {\n  return [useLocation, useRecoilState];\n});\n_c = AudioRecorderPage;\nexport default AudioRecorderPage;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorderPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useRecoilState","accessTokenState","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioRecorderPage","_s","recording","setRecording","mediaRecorder","setMediaRecorder","audioUrl","setAudioUrl","audioBlob","setAudioBlob","message","setMessage","location","leveldata","state","accessToken","setAccessToken","fetchMessageTest","pageId","id","word","console","log","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","start","audioChunks","ondataavailable","e","push","data","onstop","Blob","type","URL","createObjectURL","error","stopRecording","sendAudioToServer","formData","FormData","append","response","fetch","process","env","REACT_APP_API_URL","method","headers","body","json","ok","Error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","controls","_c","$RefreshReg$"],"sources":["/Users/sehwanii/Desktop/work/CAU/Capstone/src/pages/AudioRecorderPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'; // useLocation 임포트\nimport '../styles/AudioRecorderPage.css';\nimport { useRecoilState } from 'recoil';\nimport { accessTokenState } from '../hooks/Auth';\n\nconst AudioRecorderPage = () => {\n  const [recording, setRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [audioBlob, setAudioBlob] = useState(null); // audioBlob 상태 추가\n  const [message, setMessage] = useState(\"\");\n  const location = useLocation(); // useLocation 훅 사용\n  const leveldata = location.state;\n  const [accessToken, setAccessToken] = useRecoilState(accessTokenState);\n\n  useEffect(() => {\n    const fetchMessageTest = async () => {\n      if (leveldata) {\n        const pageId = leveldata.id;\n        const word = leveldata.word;\n        console.log(leveldata);\n        setMessage(word);\n      }\n    };\n\n    fetchMessageTest();\n  }, [leveldata]);\n\n  const startRecording = async () => {\n    console.log(accessToken);\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const recorder = new MediaRecorder(stream);\n      setMediaRecorder(recorder);\n      recorder.start();\n\n      const audioChunks = [];\n      recorder.ondataavailable = e => audioChunks.push(e.data);\n\n      recorder.onstop = () => {\n        const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudioUrl(audioUrl);\n        setAudioBlob(audioBlob); // audioBlob 상태 설정\n      };\n\n      setRecording(true);\n    } catch (error) {\n      console.error('Error accessing the microphone:', error);\n    }\n  };\n\n  const stopRecording = () => {\n    mediaRecorder.onstop();\n    setRecording(false);\n    console.log(audioUrl)\n    console.log(audioBlob);\n  };\n\n  const sendAudioToServer = async (audioBlob) => {\n    const formData = new FormData();\n    formData.append('question', leveldata.id); // 추가 데이터 전송\n    formData.append('file', audioBlob, 'audio.wav');\n  \n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/upload/`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        },\n        body: formData\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.message || 'Failed to upload audio');\n      console.log('Audio uploaded successfully:', data);\n    } catch (error) {\n      console.error('Error uploading audio:', error);\n    }\n  };\n\n  return (\n    <div className=\"center-flex\">\n      <div>\n        {message && <h2>{message}</h2>}\n        <h1>Audio Recorder</h1>\n        {recording ? (\n          <button onClick={stopRecording}>Stop Recording</button>\n        ) : \n          audioUrl ? (\n            <button onClick={startRecording}>Re Recording</button>\n          ) : (\n          <button onClick={startRecording}>Start Recording</button>\n          )\n        }\n        {audioUrl && !recording && (\n          <>\n            <audio src={audioUrl} controls />\n            <button onClick={() => sendAudioToServer(audioBlob)}>Submit Recording</button> {/* 저장 버튼 추가 */}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AudioRecorderPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}