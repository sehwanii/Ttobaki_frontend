{"ast":null,"code":"var _jsxFileName = \"/Users/sehwanii/Desktop/work/CAU/Capstone/src/pages/AudioRecorderPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'; // useLocation 임포트\nimport '../styles/AudioRecorderPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioRecorderPage = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const location = useLocation(); // useLocation 훅 사용\n  const leveldata = location.state;\n  useEffect(() => {\n    const fetchMessageTest = async () => {\n      if (leveldata) {\n        const pageId = leveldata.id;\n        const word = leveldata.word;\n        console.log(leveldata);\n        setMessage(word);\n      }\n    };\n    fetchMessageTest();\n  }, [leveldata]);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const recorder = new MediaRecorder(stream);\n      setMediaRecorder(recorder);\n      recorder.start();\n      const audioChunks = [];\n      recorder.ondataavailable = e => audioChunks.push(e.data);\n      recorder.onstop = async () => {\n        const audioBlob = new Blob(audioChunks, {\n          type: 'audio/wav'\n        });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudioUrl(audioUrl);\n        await sendAudioToServer(audioBlob);\n      };\n      setRecording(true);\n    } catch (error) {\n      console.error('Error accessing the microphone:', error);\n    }\n  };\n  const stopRecording = () => {\n    mediaRecorder.stop();\n    setRecording(false);\n  };\n  const sendAudioToServer = async audioBlob => {\n    const formData = new FormData();\n    formData.append('file', audioBlob, 'audio.wav');\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/upload/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${accessToken}`\n        },\n        body: {\n          'question': id,\n          'file': formData\n        }\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.message || 'Failed to upload audio');\n      console.log('Audio uploaded successfully:', data);\n    } catch (error) {\n      console.error('Error uploading audio:', error);\n    }\n  };\n  const saveRecording = () => {\n    const link = document.createElement('a');\n    link.href = audioUrl;\n    link.download = 'recording.wav'; // 다운로드 파일 이름 설정\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-flex\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [message && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Audio Recorder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), recording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this) : audioUrl ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        children: \"Re Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), audioUrl && !recording && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          src: audioUrl,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveRecording,\n          children: \"Submit Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecorderPage, \"GIs/+6qtMg3UXbDpui8imoeIsSQ=\", false, function () {\n  return [useLocation];\n});\n_c = AudioRecorderPage;\nexport default AudioRecorderPage;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorderPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioRecorderPage","_s","recording","setRecording","mediaRecorder","setMediaRecorder","audioUrl","setAudioUrl","message","setMessage","location","leveldata","state","fetchMessageTest","pageId","id","word","console","log","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","start","audioChunks","ondataavailable","e","push","data","onstop","audioBlob","Blob","type","URL","createObjectURL","sendAudioToServer","error","stopRecording","stop","formData","FormData","append","response","fetch","process","env","REACT_APP_API_URL","method","headers","accessToken","body","json","ok","Error","saveRecording","link","document","createElement","href","download","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","controls","_c","$RefreshReg$"],"sources":["/Users/sehwanii/Desktop/work/CAU/Capstone/src/pages/AudioRecorderPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'; // useLocation 임포트\nimport '../styles/AudioRecorderPage.css';\n\nconst AudioRecorderPage = () => {\n  const [recording, setRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const location = useLocation(); // useLocation 훅 사용\n  const leveldata = location.state;\n\n  useEffect(() => {\n    const fetchMessageTest = async () => {\n      if (leveldata) {\n        const pageId = leveldata.id;\n        const word = leveldata.word;\n        console.log(leveldata);\n        setMessage(word);\n      }\n    };\n\n    fetchMessageTest();\n  }, [leveldata]);\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const recorder = new MediaRecorder(stream);\n      setMediaRecorder(recorder);\n      recorder.start();\n\n      const audioChunks = [];\n      recorder.ondataavailable = e => audioChunks.push(e.data);\n\n      recorder.onstop = async () => {\n        const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudioUrl(audioUrl);\n        await sendAudioToServer(audioBlob);\n      };\n\n      setRecording(true);\n    } catch (error) {\n      console.error('Error accessing the microphone:', error);\n    }\n  };\n\n  const stopRecording = () => {\n    mediaRecorder.stop();\n    setRecording(false);\n  };\n\n  const sendAudioToServer = async (audioBlob) => {\n    const formData = new FormData();\n    formData.append('file', audioBlob, 'audio.wav');\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/upload/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${accessToken}`\n        },\n        body: {\n          'question' : id,\n          'file' : formData\n        }\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.message || 'Failed to upload audio');\n      console.log('Audio uploaded successfully:', data);\n    } catch (error) {\n      console.error('Error uploading audio:', error);\n    }\n  };\n\n  \n  const saveRecording = () => {\n    const link = document.createElement('a');\n    link.href = audioUrl;\n    link.download = 'recording.wav'; // 다운로드 파일 이름 설정\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <div className=\"center-flex\">\n      <div>\n        {message && <h2>{message}</h2>}\n        <h1>Audio Recorder</h1>\n        {recording ? (\n          <button onClick={stopRecording}>Stop Recording</button>\n        ) : \n          audioUrl ? (\n            <button onClick={startRecording}>Re Recording</button>\n          ) : (\n          <button onClick={startRecording}>Start Recording</button>\n          )\n        }\n        {audioUrl && !recording && (\n          <>\n            <audio src={audioUrl} controls />\n            <button onClick={saveRecording}>Submit Recording</button> {/* 저장 버튼 추가 */}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AudioRecorderPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}