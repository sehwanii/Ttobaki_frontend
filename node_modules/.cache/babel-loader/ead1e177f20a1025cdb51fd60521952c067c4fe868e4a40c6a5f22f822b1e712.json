{"ast":null,"code":"var _jsxFileName = \"/Users/sehwanii/Desktop/work/CAU/Capstone/src/pages/AudioRecorderPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/AudioRecorderPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioRecorderPage = () => {\n  _s();\n  const [recording, setRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    const fetchMessageTest = async () => {\n      const pageId = \"123\";\n      const data = \"얼음\";\n      setMessage(data);\n    };\n    fetchMessageTest();\n  }, []);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const recorder = new MediaRecorder(stream);\n      setMediaRecorder(recorder);\n      recorder.start();\n      const audioChunks = [];\n      recorder.ondataavailable = e => audioChunks.push(e.data);\n      recorder.onstop = async () => {\n        const audioBlob = new Blob(audioChunks, {\n          type: 'audio/wav'\n        });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudioUrl(audioUrl);\n        await sendAudioToServer(audioBlob);\n      };\n      setRecording(true);\n    } catch (error) {\n      console.error('Error accessing the microphone:', error);\n    }\n  };\n  const stopRecording = () => {\n    mediaRecorder.stop();\n    setRecording(false);\n  };\n  const sendAudioToServer = async audioBlob => {\n    const formData = new FormData();\n    formData.append('file', audioBlob, 'audio.wav');\n    try {\n      const response = await fetch('http://your-server.com/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.message || 'Failed to upload audio');\n      console.log('Audio uploaded successfully:', data);\n    } catch (error) {\n      console.error('Error uploading audio:', error);\n    }\n  };\n  const saveRecording = () => {\n    const link = document.createElement('a');\n    link.href = audioUrl;\n    link.download = 'recording.wav'; // 다운로드 파일 이름 설정\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-flex\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [message && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Audio Recorder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), recording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRecording,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : audioUrl ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        children: \"Re Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRecording,\n        children: \"Start Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), audioUrl && !recording && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          src: audioUrl,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveRecording,\n          children: \"Submit Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioRecorderPage, \"iYjsIx1vVjuC+zqS23zksSYhMtI=\");\n_c = AudioRecorderPage;\nexport default AudioRecorderPage;\nvar _c;\n$RefreshReg$(_c, \"AudioRecorderPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioRecorderPage","_s","recording","setRecording","mediaRecorder","setMediaRecorder","audioUrl","setAudioUrl","message","setMessage","fetchMessageTest","pageId","data","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","start","audioChunks","ondataavailable","e","push","onstop","audioBlob","Blob","type","URL","createObjectURL","sendAudioToServer","error","console","stopRecording","stop","formData","FormData","append","response","fetch","method","body","json","ok","Error","log","saveRecording","link","document","createElement","href","download","appendChild","click","removeChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","controls","_c","$RefreshReg$"],"sources":["/Users/sehwanii/Desktop/work/CAU/Capstone/src/pages/AudioRecorderPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/AudioRecorderPage.css';\n\nconst AudioRecorderPage = () => {\n  const [recording, setRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [message, setMessage] = useState(\"\");\n\n  useEffect(() => {\n    const fetchMessageTest = async () => {\n      const pageId = \"123\";\n      const data = \"얼음\";\n      setMessage(data);\n    };\n\n    fetchMessageTest();\n  }, []);\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const recorder = new MediaRecorder(stream);\n      setMediaRecorder(recorder);\n      recorder.start();\n\n      const audioChunks = [];\n      recorder.ondataavailable = e => audioChunks.push(e.data);\n\n      recorder.onstop = async () => {\n        const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudioUrl(audioUrl);\n        await sendAudioToServer(audioBlob);\n      };\n\n      setRecording(true);\n    } catch (error) {\n      console.error('Error accessing the microphone:', error);\n    }\n  };\n\n  const stopRecording = () => {\n    mediaRecorder.stop();\n    setRecording(false);\n  };\n\n  const sendAudioToServer = async (audioBlob) => {\n    const formData = new FormData();\n    formData.append('file', audioBlob, 'audio.wav');\n    try {\n      const response = await fetch('http://your-server.com/api/upload', {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await response.json();\n      if (!response.ok) throw new Error(data.message || 'Failed to upload audio');\n      console.log('Audio uploaded successfully:', data);\n    } catch (error) {\n      console.error('Error uploading audio:', error);\n    }\n  };\n\n  const saveRecording = () => {\n    const link = document.createElement('a');\n    link.href = audioUrl;\n    link.download = 'recording.wav'; // 다운로드 파일 이름 설정\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <div className=\"center-flex\">\n      <div>\n        {message && <h2>{message}</h2>}\n        <h1>Audio Recorder</h1>\n        {recording ? (\n          <button onClick={stopRecording}>Stop Recording</button>\n        ) : \n          audioUrl ? (\n            <button onClick={startRecording}>Re Recording</button>\n          ) : (\n          <button onClick={startRecording}>Start Recording</button>\n          )\n        }\n        {audioUrl && !recording && (\n          <>\n            <audio src={audioUrl} controls />\n            <button onClick={saveRecording}>Submit Recording</button> {/* 저장 버튼 추가 */}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AudioRecorderPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}